---
import { createNavigation } from "./Navigation";
import { createLocale } from "@lib/i18n";
import Languages from "~icons/heroicons/language-16-solid";
import ColorschemeToggle from "./ColorschemeToggle.astro";

interface Props {
    class?: string;
    back?: string;
}
const { class: className, back = "/" } = Astro.props;

const { getLocaleUrl, str, normalizedUrl, locale } = createLocale(Astro.url);

const localizedBack = getLocaleUrl(back);

const pathname = new URL(normalizedUrl, Astro.url).pathname;
const c = (path: string, className: string) => (pathname === path ? className : "");

const navigation = createNavigation(
    [
        {
            label: str("Home", "Home"),
            path: getLocaleUrl("/"),
        },
        {
            label: str("Blog", "Blog"),
            path: getLocaleUrl("/blog"),
        },
    ],
    Astro.url
);
---

<nav class={`${className}`}>
    <div
        class="flex flex-col items-start justify-between gap-x-10 gap-y-3 md:flex-row md:items-center">
        <div>
            <a
                href={localizedBack}
                class:list={[
                    "flex items-center gap-2 border-brand-border text-sm md:border-b",
                    [c(back, "invisible")],
                ]}
                aria-hidden={pathname === back}
                aria-label={str("back", "terug")}>
                ‚Üê <span>{str("back", "terug")}</span>
            </a>
        </div>
        <div class="flex w-full items-center gap-10 md:w-auto">
            <ul
                class="flex items-center gap-10"
                aria-label={str("Navigation menu", "Navigatiemenu")}>
                {
                    navigation.map(({ label, path, active }) => (
                        <li>
                            <a
                                href={path}
                                class:list={[
                                    "flex items-center gap-2",
                                    !active && "text-brand-muted",
                                ]}>
                                {label}
                            </a>
                        </li>
                    ))
                }
            </ul>
            <div
                class="ml-auto flex items-center rounded-full border border-brand-border text-sm md:justify-normal"
                aria-label={str("Website settings", "Website-instellingen")}>
                <a
                    href={getLocaleUrl(Astro.url, locale === "en" ? "nl" : "en")}
                    class="flex items-center justify-center gap-1 rounded-s-full px-3 py-1 pr-2.5">
                    <Languages class="-mb-[2px] h-3 w-3" aria-labelledby="languageItem" />
                    <span class="w-[2ch] text-center">
                        {
                            locale === "en" && (
                                <span
                                    id="languageItem"
                                    aria-label={str(
                                        "Switch to Dutch language",
                                        "Verander naar Nederlands taal"
                                    )}>
                                    nl
                                </span>
                            )
                        }
                        {
                            locale === "nl" && (
                                <span
                                    id="languageItem"
                                    aria-label={str(
                                        "Switch to English language",
                                        "Verander naar Engelse taal"
                                    )}>
                                    en
                                </span>
                            )
                        }
                    </span>
                </a>
                <div class="h-4 border-r border-brand-border"></div>
                <div>
                    <ColorschemeToggle />
                </div>
            </div>
        </div>
    </div>
</nav>
