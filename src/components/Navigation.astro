---
import { createNavigation } from "./Navigation";
import { createLocale } from "@lib/i18n";
import Languages from "~icons/heroicons/language-16-solid";
import Sun from "~icons/heroicons/sun-16-solid";
import Moon from "~icons/heroicons/moon-16-solid";

interface Props {
    class?: string;
    back?: string;
}
const { class: className, back = "/" } = Astro.props;

const { getLocaleUrl, str, normalizedUrl, locale } = createLocale(Astro.url);

const localizedBack = getLocaleUrl(back);

const pathname = new URL(normalizedUrl, Astro.url).pathname;
const c = (path: string, className: string) => (pathname === path ? className : "");

const navigation = createNavigation(
    [
        {
            label: str("Home", "Home"),
            path: getLocaleUrl("/"),
        },
        {
            label: str("Blog", "Blog"),
            path: getLocaleUrl("/blog"),
        },
    ],
    Astro.url
);
---

<nav class={`${className}`}>
    <div
        class="flex flex-col items-start justify-between gap-x-10 gap-y-3 text-brand-border md:flex-row md:items-center">
        <div>
            <a
                href={localizedBack}
                class:list={[
                    "flex items-center gap-2 border-brand-border text-sm md:border-b",
                    [c(back, "invisible")],
                ]}
                aria-hidden={pathname === back}
                aria-label={str("back", "terug")}>
                ‚Üê <span>{str("back", "terug")}</span>
            </a>
        </div>
        <ul class="flex w-full gap-10 md:w-auto">
            {
                navigation.map(({ label, path, active }) => (
                    <li>
                        <a
                            href={path}
                            class:list={["flex items-center gap-2", active && "text-brand-muted"]}>
                            {label}
                        </a>
                    </li>
                ))
            }
            <li class="flex flex-grow items-center justify-end gap-2 text-sm md:justify-normal">
                <Languages class="h-4 w-4" />
                <a
                    href={getLocaleUrl(Astro.url, locale === "en" ? "nl" : "en")}
                    class="flex items-center gap-1">
                    <span class:list={[locale === "en" && "text-brand-muted"]}>en</span>
                    <span class="text-brand-border/50">/</span>
                    <span class:list={[locale === "nl" && "text-brand-muted"]}>nl</span>
                </a>
            </li>
            <li>
                <div id="themeToggle" class="theme-toggle" role="radiogroup" aria-label="Theme toggle">
                    <input id="light" type="radio" name="theme" value="light" />
                    <label for="light" aria-label="Light theme"><Sun class="h-4 w-4"></label>
                    <input id="auto" type="radio" name="theme" value="auto" />
                    <label for="auto" aria-label="Automatic theme switching">A</label>
                    <input id="dark" type="radio" name="theme" value="dark" />
                    <label for="dark" aria-label="Dark theme"><Moon class="h-4 w-4"></label>
                    <span></span>
                </div>
            </li>
        </ul>
    </div>
</nav>

<style>
    .theme-toggle {
        display: grid;
        grid-template-columns: repeat(3, 1.5rem);
        grid-template-rows: 1.5rem;
        align-items: center;
        justify-content: center;
        position: relative;

        label {
            position: relative;
            z-index: 2;
            cursor: pointer;
            transition: color 0.3s ease-in-out;
            display: flex;
            align-items: center;
            justify-content: center;
        }

        input {
            display: none;
        }

        span {
            height: 1.5rem;
            width: 1.5rem;
            border-radius: 50%;
            background-color: currentColor;
            display: block;
            position: absolute;
            transition: all 0.3s ease-in-out;
        }

        input:checked + label {
            color: var(--brand-background);
        }
        input[value="light"]:checked ~ span {
            left: 0;
        }
        input[value="auto"]:checked ~ span {
            left: 1.5rem;
        }
        input[value="dark"]:checked ~ span {
            left: 3rem;
        }
    }


</style>
