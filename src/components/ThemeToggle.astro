---
import Sun from "~icons/heroicons/sun-16-solid";
import Moon from "~icons/heroicons/moon-16-solid";
---

<div
    id="themeToggle"
    class="theme-toggle"
    role="radiogroup"
    aria-label="Theme toggle"
    aria-labelledby="themeToggleLabel">
    <span id="themeToggleLabel" class="sr-only">Choose your color-scheme preference:</span>
    <input id="light" type="radio" name="theme" value="light" aria-labelledby="lightThemeLabel" />
    <label for="light" id="lightThemeLabel" aria-label="Light theme" tabindex="0">
        <span class="sr-only">Light theme</span>
        <Sun />
    </label>
    <input id="auto" type="radio" name="theme" value="auto" aria-labelledby="autoThemeLabel" />
    <label for="auto" id="autoThemeLabel" aria-label="Automatic theme switching" tabindex="0">
        <span class="sr-only">Automatic theme switching</span>
        A
    </label>
    <input id="dark" type="radio" name="theme" value="dark" aria-labelledby="darkThemeLabel" />
    <label for="dark" id="darkThemeLabel" aria-label="Dark theme" tabindex="0">
        <span class="sr-only">Dark theme</span>
        <Moon />
    </label>
    <span></span>
</div>

<script>
    document.querySelectorAll(".theme-toggle > label").forEach((_label) => {
        let label = _label as HTMLLabelElement;
        label.addEventListener("keydown", (event) => {
            if (event.key === " ") {
                event.preventDefault();
                let forAttr: string | null;
                if ((forAttr = label.getAttribute("for"))) {
                    const input = document.getElementById(forAttr) as HTMLInputElement;
                    input.checked = true;
                }
            }
        });
    });
</script>

<style>
    .theme-toggle {
        --base-size: 1.3rem;
        --icon-size: 0.9rem;
        --gap-size: 0.125rem;

        display: grid;
        grid-template-columns: repeat(3, var(--base-size));
        grid-template-rows: var(--base-size);
        align-items: center;
        justify-content: center;
        position: relative;
        gap: var(--gap-size);

        label {
            position: relative;
            width: var(--base-size);
            height: var(--base-size);
            border-radius: 50%;
            z-index: 2;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            user-select: none;
            font-size: var(--icon-size);

            svg {
                width: var(--icon-size);
                height: var(--icon-size);
            }
        }

        input {
            display: none;
        }

        span {
            height: var(--base-size);
            width: var(--base-size);
            border-radius: 50%;
            background-color: currentColor;
            display: block;
            position: absolute;

            transition: left 0.3s ease-in-out;
            @media (prefers-reduced-motion) {
                transition: none;
            }
        }

        input:checked + label {
            color: var(--brand-background) !important;
        }
        input[value="light"]:checked ~ span {
            left: 0;
        }
        input[value="auto"]:checked ~ span {
            left: calc(var(--base-size) + var(--gap-size));
        }
        input[value="dark"]:checked ~ span {
            left: calc(var(--base-size) * 2 + var(--gap-size) * 2);
        }
    }
</style>
