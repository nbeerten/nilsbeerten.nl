---
import type { CollectionEntry } from "astro:content";
import { getCollection } from "astro:content";
import Layout from "@layouts/Layout.astro";
import HeadingGroup from "@components/HeadingGroup.astro";
import { createLocale } from "@lib/i18n";
import Languages from "~icons/heroicons/language-16-solid";

export async function getStaticPaths() {
    const posts = (await getCollection("blog")).filter((blog) => !blog.data.draft);

    return posts.map((post) => ({
        params: { slug: post.slug },
        props: { post },
    }));
}

type Props = {
    post: CollectionEntry<"blog">;
};

const { post } = Astro.props;

const { Content, remarkPluginFrontmatter } = await post.render();

const { locale, str } = createLocale(Astro.url);

const formatTime = (time: number) => {
    const minutes = Math.round(time);
    return `${minutes} ${str("min read", "minuten leestijd")}`;
};
---

<Layout
    title={post.data.title}
    back="/blog"
    lang={post.data.language}
    image={`blog-${post.slug}`}
    article={{ published_time: post.data.date }}>
    <article>
        <HeadingGroup title={post.data.title}>
            <header
                slot="subtitle"
                class="inline-flex items-center gap-1 text-brand-muted"
                role="contentinfo"
                aria-label="Article metadata">
                <Languages class="-mb-0.5 h-4 w-4" />
                <span>{post.data.language}</span>
                <span>-</span>
                <span>{post.data.date.toLocaleDateString(`${locale}-NL`)}</span>
                <span>-</span>
                <span>{formatTime(remarkPluginFrontmatter.readingTime)}</span>
            </header>
        </HeadingGroup>
        <hr class="my-5 border-amber-100/10" />
        <div class="prose_img prose prose-amber prose-invert">
            <Content />
        </div>

        <i class="mt-4 block text-brand-muted"
            >{str("Last modified", "Laatste aanpassing")}
            <time data-timestamp={remarkPluginFrontmatter.lastModified}
                >{
                    new Date(remarkPluginFrontmatter.lastModified).toLocaleString(`${locale}-NL`, {
                        timeZone: "UTC",
                    })
                } UTC</time
            ></i
        >
    </article>
</Layout>

<style>
    .prose :global(img) {
        @apply my-0 rounded-md border border-amber-100/10 drop-shadow-md;
    }

    .prose :global(ul) {
        list-style-type: "- ";
        margin-top: -1.25em; /* reduce margin to 0 */
        @apply py-0;
    }

    .prose :global(ul) :global(li) {
        @apply my-0;
    }

    .prose :global(p:where(p + ul)) {
        @apply text-red-400;
    }
</style>

<script>
    replace();
    document.addEventListener("astro:after-swap", replace);

    function replace() {
        document.querySelectorAll("[data-timestamp]").forEach((el) => {
            const timestamp = el.getAttribute("data-timestamp");
            if (!timestamp) return;
            const date = new Date(timestamp);

            el.textContent = date.toLocaleString();
        });
    }
</script>
