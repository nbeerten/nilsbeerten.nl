---
import { ViewTransitions } from "astro:transitions";
import Navigation from "@components/Navigation.astro";
import "src/styles/colors.css";

interface Props {
    title: string;
    description?: string;
    article?:
        | false
        | {
              published_time: Date;
          };
    class?: string;
    back?: string;
    lang: "en" | "nl";
    noindex?: boolean;
}

const {
    title,
    description = "Personal website of Nils Beerten, aka nbeerten, nbert.",
    article = false,
    class: className,
    back = "/",
    lang,
    noindex = false,
} = Astro.props;
---

<!doctype html>
<html lang={lang}>
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />

        <link rel="icon" href="/favicon.ico" sizes="any" />
        <link rel="icon" href="/favicon.svg" type="image/svg+xml" />
        <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
        <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
        <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
        <link rel="manifest" href="/site.webmanifest" />

        {noindex && <meta name="robots" content="noindex" />}

        <link rel="sitemap" href="/sitemap-index.xml" />
        <meta name="generator" content={Astro.generator} />

        <title>{title}</title>
        <meta name="description" content={description} />

        <meta name="theme-color" content="#ffffff" />

        <meta property="og:title" content={title} />
        <meta property="og:description" content={description} />
        <meta property="og:type" content={article ? "article" : "website"} />
        {
            article && (
                <>
                    <meta
                        property="article:published_time"
                        content={article.published_time.toISOString()}
                    />
                    <meta property="article:author" content="Nils Beerten" />
                </>
            )
        }
        <meta property="og:url" content={Astro.url} />

        <meta property="twitter:domain" content={Astro.url.host} />
        <meta property="twitter:url" content="https://nilsbeerten.nl" />
        <meta name="twitter:title" content={title} />
        <meta name="twitter:description" content={description} />

        <link
            rel="preload"
            href="/fonts/Satoshi-Variable.woff2"
            as="font"
            type="font/woff2"
            crossorigin="anonymous"
            transition:persist
        />
        <link
            rel="preload"
            href="/fonts/Inter-Variable.woff2"
            as="font"
            type="font/woff2"
            crossorigin="anonymous"
            transition:persist
        />

        <script is:inline>
            (function () {
                const storedScheme = localStorage.getItem("color-scheme");

                const prefersDarkScheme = storedScheme
                    ? storedScheme === "dark"
                    : window.matchMedia("(prefers-color-scheme: dark)").matches;

                document.documentElement.classList.add(prefersDarkScheme ? "dark" : "light");
            })();
        </script>

        <script>
            import ColorSchemeManager from "../scripts/colorScheme.ts";

            window.setColorScheme = ColorSchemeManager.setColorScheme;

            ColorSchemeManager.applyColorScheme(document);

            document.addEventListener("astro:before-swap", (event) => {
                ColorSchemeManager.applyColorScheme(event.newDocument);
            });

            document.addEventListener("astro:after-swap", () => {
                ColorSchemeManager.initializeColorSchemeToggler(document);
            });

            document.addEventListener("astro:page-load", () => {
                ColorSchemeManager.initializeColorSchemeToggler(document);
                window
                    .matchMedia("(prefers-color-scheme: dark)")
                    .addEventListener("change", () =>
                        ColorSchemeManager.applyColorScheme(document)
                    );
            });
        </script>

        <style>
            :root {
                background-color: theme(colors.brand.background);
                color: theme(colors.brand.text);
                scrollbar-gutter: stable both-edges;

                font-feature-settings: "cv05", "cv07", "cv11", "ss01";
            }

            a,
            p,
            h1,
            h2,
            h3,
            h4,
            h5,
            h6 {
                text-decoration-color: theme(colors.brand.border);
            }
        </style>

        <style is:inline>
            @font-face {
                font-family: "Satoshi";
                src: url(/fonts/Satoshi-Variable.woff2) format("woff2");
                font-weight: 300 900;
                font-display: swap;
                font-style: normal;
            }

            @font-face {
                font-family: "Satoshi";
                src: url(/fonts/Satoshi-VariableItalic.woff2) format("woff2");
                font-weight: 300 900;
                font-display: swap;
                font-style: italic;
            }

            @font-face {
                font-family: "Inter";
                src: url(/fonts/Inter-Variable.woff2) format("woff2");
                font-weight: 100 900;
                font-display: swap;
                font-style: normal;
            }

            @font-face {
                font-family: "Inter";
                src: url(/fonts/Inter-VariableItalic.woff2) format("woff2");
                font-weight: 100 900;
                font-display: swap;
                font-style: italic;
            }
        </style>

        {/* Fix prettier formatting; without this the <style> gets moved to inside the <body> */}
        <ViewTransitions fallback="swap" />
    </head>
    <body class={`flex justify-center px-10 py-10 ${className}`}>
        <div class="w-full max-w-2xl">
            <Navigation class="mb-5" {back} />
            <main>
                <slot />
            </main>
        </div>
    </body>
</html>
